#!/usr/bin/env node
// 'use strict';
var fs        = require('fs');
var pkg       = require('../package.json');
var i18n      = require("i18n");
var path      = require('path');
var commander = require('commander');
var controller   = require('../src/controller');
// ===============================
var defaultLocale = 'en';
if (process.env.LANG && process.env.LANG.indexOf('zh') > -1) defaultLocale = 'zh_CN';
if (process.env.METEORUP_LANG) defaultLocale = process.env.METEORUP_LANG;
i18n.configure({
    locales: ['en', 'zh_CN'],
    directory: __dirname + '/../locales',
    defaultLocale: defaultLocale,
    register: global
});
// ===============================

console.log(__('Welcome').bold.cyan);

// 部署到meteorup
commander.command('deploy <project-name> <private-key>')
  .option('-m, --mobile-settings <mobile-settings.json>', __('mobile-settings'))
  .option('-s, --server-only', __('server-only'))
  .option('-d, --debug', __('debug'))
  .description(__('deploy-desc'))
  .action(function(projectName , privateKey, options) {

    var pwd = path.resolve('.');

    var actionsRegistry = new controller( pwd ,options);
    if(actionsRegistry['deploy']) {
      actionsRegistry['deploy'](projectName,privateKey);
    }

  }).on('--help', function() {
    console.log(__('deploy-help'));
  }
);

commander.version(pkg.version)
  .usage('deplay project-name')
  .description(__('description'))
  .option('-v, --version', __('version'))

commander.on('--help', function() {
  console.log(__('help'));
});

if (process.argv && process.argv.length <= 2) {
  process.argv.push('-h');
};

commander.parse(process.argv);
