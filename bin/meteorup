#!/usr/bin/env node
// 'use strict';
var fs        = require('fs');
var pkg       = require('../package.json');
var path      = require('path');
var commander = require('commander');
var controller   = require('../lib/controller');

console.log(('Welcome to use meteorup service.').bold.blue);

// 部署到meteorup
commander.command('deploy <project-name> <private-key>')
  .option('-m, --mobile-settings <mobile-settings.json>', 'Set mobile-settings from json file')
  .option('-s, --server-only', 'server only')
  .option('-d, --debug', 'debug mode')
  .description('Deployment this project to meteorup.cn microhost')
  .action(function(projectName , privateKey, options) {

    var pwd = path.resolve('.');

    var actionsRegistry = new controller( pwd ,options);
    if(actionsRegistry['deploy']) {
      actionsRegistry['deploy'](projectName,privateKey);
    }

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ meteorup deploy appName  # Deployment to http://appName.meteorup.cn ');
    console.log();
    console.log('    $ meteorup deploy appName --env env.json');
    console.log();
  }
);

commander.version(pkg.version)
  .usage('deplay project-name')
  .description(pkg.description)
  .option('-v, --version', 'meteorup version')

commander.on('--help', function() {
  console.log('  Basic Examples:');
  console.log('');
  console.log('  Faster install meteor:');
  console.log('');
  console.log('    $ meteorup install');
  console.log('');
  console.log('  Deployment project:');
  console.log('');
  console.log('    $ meteorup deploy appName');
  console.log('');
  console.log('  Command help:');
  console.log('');
  console.log('    $ meteorup deploy -h');
  console.log('');
});

if (process.argv && process.argv.length <= 2) {
  process.argv.push('-h');
};

commander.parse(process.argv);
